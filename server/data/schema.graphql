# A container going as part of shipment
type Container {
  # Type of the container
  type: String

  # Container number
  number: String
}

# A customer whose containers we are transporting
type Customer {
  id: String

  # Full name of the customer
  name: String

  # Company name of the customer
  company: String
}

# Location represented by latitude and longitude
type Location {
  # Human-friendly name of the location
  name: String

  # Latitude of a tracking event
  latitude: Float

  # Longitude of a tracking event
  longitude: Float
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

type Query {
  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
  viewer: Shipments
}

# Conjunction of point and time and location, point of a route
type RoutePoint {
  # Point in time
  date: String
  latitude: Float
  longitude: Float
}

# An actual shipment that consists of one or many containers
type Shipment {
  id: String
  containers: [Container]

  # Customer who ordered this container
  customer: Customer

  # Location of shipment origin
  origin: Location

  # Location of shipment destination
  destination: Location
  route: [RoutePoint]
}

# A shipment with its route represented by tracking events
type Shipments {
  shipments: [Shipment]
}
